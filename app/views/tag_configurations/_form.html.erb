  <%= f.error_messages %>
  
  <fieldset>
    <h2>1. Provide a name for the configuration</h2>
    <p class="plugin_choice">
      <%= f.text_field :name, :class => 'configuration_name' %>
    </p>
    <p>(required) Every configuration has a name so that you can 
      retrieve it in the future.
    </p>
  </fieldset>

  <hr />

  <fieldset>
    <h2>3. Choose data capture plugins</h2>
    <p class="plugin_choice">
      <%= check_box_tag label_for_plugin_param(:link_tracker, :trackDownloads), true,
            value_for_plugin_param(:link_tracker, :trackDownloads), 
            :class => 'configurable link_tracker' %>
      <%= label_tag label_for_plugin_param(:link_tracker, :trackDownloads), 
  		      "Track downloads", :class => 'right plugin_name' %> <br />
    </p>
    <p>
    	Capture links to downloads and other resources on your site that don't
    	have tags. Tracking code will be automatically added to these links.
    </p>
    <div id="configure_plugin_<%= link_tracker_plugin.id %>_trackDownloads">
      <p><em>File extensions that are treated as download links. Extensions should be separated
        with a comma or space. </em></p>
      <p>
        <%= label_tag label_for_plugin_param(:link_tracker, :downloadLinkTypes), 
              'File extensions' %>
        <%= text_field_tag label_for_plugin_param(:link_tracker, :downloadLinkTypes), 
              value_for_plugin_param(:link_tracker, :downloadLinkTypes) %>
      </p>
    </div>    
    
    <p class="plugin_choice">
      <%= check_box_tag label_for_plugin_param(:link_tracker, :trackExternalLinks), true,
            value_for_plugin_param(:link_tracker, :trackExternalLinks), 
            :class => 'configurable link_tracker' %>
      <%= label_tag label_for_plugin_param(:link_tracker, :trackExternalLinks), 
  		      "Track external links", :class => 'right plugin_name' %> <br />
    </p>
    <p>
    	Capture out-going links from your site. 
    </p>
    <div id="configure_plugin_<%= link_tracker_plugin.id %>_track_external_links">
      <p><em>Domain names that should be treated as belonging to your site, and not tracked as
        external domains. For example, if the tag is to be placed on www.jshub.org, you might also
        list blog.jshub.org as a domain belonging to the site, if you have tags present on that
        site. </em></p>
      <p>
        <%= label_tag label_for_plugin_param(:link_tracker, :internalDomains), 
              'Internal domain names' %>
        <%= text_field_tag label_for_plugin_param(:link_tracker, :internalDomains), 
              value_for_plugin_param(:link_tracker, :internalDomains) %>
      </p>
    </div>  
    
    <!-- Include the link tracking code if tracking either downloads or external links -->
    <%= hidden_field_tag label_for_plugin_param(:link_tracker, :include), 
          @tag_configuration.has_plugin?(link_tracker_plugin),
          :class => 'include_link_tracker' %>
    <script type="text/javascript" charset="utf-8">
      (function () {
        var input = $('.include_link_tracker')[0];
        var includeLinkTracker = function () {
          var include = false;
          $('input:checkbox.link_tracker').each(function () {
            if (this.checked) {
              include = true;
            }
          });
          input.value = include;
        }
        $('input:checkbox.link_tracker').bind("change click", includeLinkTracker);
      })();
    </script>
      
    <p class="plugin_choice">
      <%= check_box_tag label_for_plugin_param(:microformat, :include), true,
            @tag_configuration.has_plugin?(mf_plugin) %>
      <%= label_tag label_for_plugin_param(:microformat, :include),
            'Page data HTML microformats', :class => 'right plugin_name' %>
    </p>
    <p>Collects basic information about the page, from hPage
      and other HTML microformat markup on the page.</p>
	  
    <p class="plugin_choice">
      <%= check_box_tag label_for_plugin_param(:google_analytics_markup, :include), true,
            @tag_configuration.has_plugin?(ga_markup_plugin) %>
      <%= label_tag label_for_plugin_param(:google_analytics_markup, :include),
            'Google Analytics markup', :class => 'right plugin_name' %>
    </p>
    <p>
      Collects basic basic page view information from Google Analytics 
      tags on the page.<br/>
      <em>This plugin is purely illustrative, it does not replace the Google tag, 
        and it is not supported by Google</em>.
    </p>
  </fieldset>

  <hr />

  <fieldset>
  	<h2>3. Choose data transport plugins</h2>
    <p class="plugin_choice">
      <%= check_box_tag label_for_plugin_param(:causata, :include), true,
            @tag_configuration.has_plugin?(causata_plugin), 
            :class => 'configurable' %>
      <%= label_tag label_for_plugin_param(:causata, :include), 
  		"Causata plugin", :class => 'right plugin_name' %> <br />
    </p>
    <p>
    	Sends information to a <%= link_to 'Causata', 'http://www.causata.com/' %>
    	data capture server.
    </p>
    <div id="configure_plugin_<%= causata_plugin.id %>">
      <p>
        <%= label_tag label_for_plugin_param(:causata, :server), 
              'Server URL' %>
        <%= text_field_tag label_for_plugin_param(:causata, :server), 
              value_for_plugin_param(:causata, :server) %>
      </p>
      <p>
        <%= label_tag label_for_plugin_param(:causata, :account), 'Account ID' %>
        <%= text_field_tag label_for_plugin_param(:causata, :account), 
              value_for_plugin_param(:causata, :account) %>
      </p>
    </div>

    <p class="plugin_choice">
      <%= check_box_tag label_for_plugin_param(:google_analytics, :include), true,
            @tag_configuration.has_plugin?(google_analytics_plugin), 
            :class => 'configurable' %>
      <%= label_tag label_for_plugin_param(:google_analytics, :include), 
  		  "Google Analytics plugin", :class => 'right plugin_name' %> <br />
    </p>
    <p>
    	Injects the tag library for <%= link_to 'Google Analytics', 'http://www.google.com/analytics/' %>
    	into the page, and provides the jsHub page name as the page name for Google.
    </p>
    <div id="configure_plugin_<%= google_analytics_plugin.id %>">
      <p>
        <%= label_tag label_for_plugin_param(:google_analytics, :account), 'Account ID' %>
        <%= text_field_tag label_for_plugin_param(:google_analytics, :account), 
              value_for_plugin_param(:google_analytics, :account) %>
      </p>
    </div>

  <p class="plugin_choice">
    <%= check_box_tag label_for_plugin_param(:sample_get, :include), true,
          @tag_configuration.has_plugin?(sample_get_plugin), 
          :class => 'configurable' %>
    <%= label_tag label_for_plugin_param(:sample_get, :include), "Sample HTTP GET plugin",
		  :class => 'right plugin_name sample' %> <br />
  </p>
  <p>
	Sends information to a server using a single pixel image request URL. <br />
	<em>A template for building an output plugin to send data to a data capture
	server. </em>
  </p>
  <div id="configure_plugin_<%= sample_get_plugin.id %>">
    <p>
      <%= label_tag label_for_plugin_param(:sample_get, :server_url), 
            'Server URL' %>
      <%= text_field_tag label_for_plugin_param(:sample_get, :server_url), 
            value_for_plugin_param(:sample_get, :server_url) %>
    </p>
    <p>
      <%= label_tag label_for_plugin_param(:sample_get, :account_id), 'Account ID' %>
      <%= text_field_tag label_for_plugin_param(:sample_get, :account_id), 
            value_for_plugin_param(:sample_get, :account_id) %>
    </p>
  </div>
  
  <p class="plugin_choice">
    <%= check_box_tag label_for_plugin_param(:sample_post, :include), true,
          @tag_configuration.has_plugin?(sample_post_plugin), 
          :class => 'configurable' %>
    <%= label_tag label_for_plugin_param(:sample_post, :include), "Sample HTTP POST plugin",
          :class => 'right plugin_name sample' %>
  </p>
  <p>
  	Sends information to a server by posting a form into a hidden iframe. <br />
	<em>A template for building an output plugin to send data to a data capture
	server. </em>
  </p>
  
  <div id="configure_plugin_<%= sample_post_plugin.id %>">
    <p>
      <%= label_tag label_for_plugin_param(:sample_post, :server_url), 'Server URL' %>
      <%= text_field_tag label_for_plugin_param(:sample_post, :server_url), 
            value_for_plugin_param(:sample_post, :server_url) %>
      
    </p>
    <p>
      <%= label_tag label_for_plugin_param(:sample_post, :account_id), 'Account ID' %>
      <%= text_field_tag label_for_plugin_param(:sample_post, :account_id), 
            value_for_plugin_param(:sample_post, :account_id) %>
    </p>
  </div>
  
  </fieldset>

  <hr />
  
  <fieldset>
  	<h2>4. Add third party library</h2>

  <p class="plugin_choice">
    <%= check_box_tag label_for_plugin_param(:jquery, :include), true,
          @tag_configuration.has_plugin?(jquery_plugin) %>
    <%= label_tag label_for_plugin_param(:jquery, :include), 
          'jQuery library', :class => 'right plugin_name' %> 
  </p>
  <p>
    jQuery is a required dependency for the jsHub code. You do not need this 
	if you have jQuery 1.2 or later on your site already. Adds 19Kb to the file 
	when it is served gzipped.
  </p>
  </fieldset>

  <hr />

  <fieldset>
  	<h2>5. Comments</h2>
  
  <p>
    <%= f.text_area :comments %>
  </p>
  <p class="hide">
    <%= f.label :jshub_version, 'jsHub code version:' %>
    <%= f.select :jshub_version, tag_versions, :size => 1 %>
  </p>
  
  </fieldset>

  <hr />  
  
  <script type="text/javascript">
    function bindConfig() {
      var checkbox = this, 
        id = (function () {
          var matches = checkbox.id.match(/([0-9]+)(.*)$/);
          if (matches[2] == "_include") {
            return matches[1];
          } else {
            return matches[0];
          }
        }()), 
        config_div = $('#configure_plugin_'+id);
      $(checkbox).bind("change click", function(evt) {
        if (evt.target.checked) {
          config_div.show('medium');
        } else {
          config_div.hide('medium');
        }
      });
      if (! checkbox.checked) {
  	  	config_div.hide();
  	  }
    }
    
    $('input:checkbox.configurable').each(bindConfig);
  </script>

  